<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ProblemIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABbAHsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        9M4B9xRRxz9OKKAAHaa+e/25v+Cmfwt/YC0VD4y1aS88RXkJuLHw7pgWbUbpM7RIwLBIIicgSTMqttYL
        uYbah/4Khftxw/sDfso6n4ut44LrxNqU66P4dtpxmGS9kR2Ekn/TOKOOSVhkbvLCblLg18wf8E4/2J9B
        +AXwb1T9rL9oi4uPEnxC1Oxfxi11rC/aH8O2gi81JVjPW+kj2kcAwgxwRLGRIZAC7ZfHf9uH9tvTJNY8
        MaB4P/Zl+HpjNwuqeJl87V2twPncrPExAAG4F7a3GDkSMMGvEvHPh74QaLqLw/GD/gol8U/GN2zEzQeC
        by6ks1buoSAX0K46HAXpggdK+QP29P8Ago98QP2//HN1c6/fXek+DI7jzNJ8KW9wfsVigP7t5gMC4ucc
        mVwcMzBAi/LXgCqFGBgAdAAOKAP0UtrD9hpZ1Mf7UH7UNrNkf6SPtQYe/wDyCif0r0X4T+DNN8U6vAvw
        B/4KJ+JY9VyF0/QvHlxJM17IT8qLFeNEDnvttX/3a/KemzQpcRskiq6twVYAg0Aftbq/7fv7VP8AwT1b
        d+0R8LdM+IngO3IW48beCGCtbLkZlmTCxjqoAmis0JYAOxGD9n/suftefD39sj4dr4m+H3iK21qxjIju
        4CDDeaZKc/uriBsPE/BxkbWA3IWUhj+NP/BKH/grd4k/Zg+IOi+AfiBq9z4h+EOtzJprpqD/AGiTwuZM
        RpNC7nP2QEqJYCSipueMBlZJfoj/AIKOfsk6x/wSq+Lmn/tOfs/Qx6Fof26Ox8W+GIgY9LCTuFUeWo2r
        ZTSbYzGP9RK8LxAZ/dgH6tZori/2dPjton7TfwN8LeP/AA40h0bxXp8V/AkhHm25YYeGTBIEkcgeNgCQ
        GRhk12mc0AGflxRRxt/2s0UAFFFFAB/SvN/2wvjVefs4fsrfELx9p9nb6hqHhDQLvVbS2uGZYZpooiyL
        JtIbZuxuAIJGQCOtekH/APVXgf8AwVOOP+Cb/wAbv+xQ1D/0SaAPwV/aL/bS+J/7cniTR7f4oeKpvEtj
        bX3+jWK2kFpa2gmZEkVEhReCgC5cs2B94kkn9qP+C8OpSaV/wS6+I3ksY/tFzpFu23jKNqlrkfQjivwG
        8MceKtL/AOv2D/0atfrF/wAHMXx28X+GNN+Hvw+srx7PwX4utr3UNVgFujf2pPaXFo0KmQqWUQllfahX
        JlXduAUAA/I3ijApf896P896AEwKMCl/z3pW9s/jQBW1KPzdOuF67o2XHrkGv6HP2v5f+E7/AOCK/i68
        1T/Tprv4WpqEjy/MWnWwjmWQn+8JAGz6gV/PUy71weh4I9a/YD9ln49eL/j7/wAG/nxruPGF5/aFx4X0
        bW/DumXTWyQNLYW+nwGFTsVVbyzI8W/GSIxuLNuJAPhL9jL/AIKr/GL9i5vD+i6D4g/tTwDpd4Wl8L31
        tFJayxSztLOscu3zoWZpJGDK+0O2SrgbT/RpjDN9ePpX8ncZ2zxN/dlQ/rX9YjHMjfWgA7Z7UUdu+aPz
        z3oAKKO/Ofwo+X/aoACM/wBPas/xZ4V03x14W1LRNYsbTVNH1i1ksr6yuohLBdwSKUkidTwyspIIPBBr
        QP8An2ooA+E2/wCDdv8AZ7j+IVvrlrJ8QLKxtbtLpdEj11XsSEYMIi8kTXWw4AP7/dj+LvXr3/BTv9gD
        T/8AgoR+z23h9bi10nxdoczal4b1OZCYoLnaVaGYqC32eZflfaCVIjcK5jCn6OPJ9fajtQB/K38XPhF4
        l+AvxL1jwb4w0m40LxN4fnFvfWMxVmhYqrqQykq6sjK6spIZWUg4Nc7X7pf8Fjv+CS037bWnW/jz4fpa
        2vxO0Kz+yy2s8ggh8S2iEskDO2FjuELN5cjYVgxSRgux4vxF+Ifw78QfCHxpdeG/Fmh6r4Z8QWP+v03U
        7Zra5jB6NscAlG6q4yrDBUkEGgDHoJ3d6K7r9nX9mXx9+1r48j8N/DrwvqHibUt4W5kgXbZ6aD/HdXB/
        dwJgMfnYM2MIHbCkA3P2N/2M/G37c/xjh8G+CbeFZI0W51TVLni00S13BTcS4IZzk4SJPnkbgbVDun7R
        ftpfCzwf+wb/AMEWvHPgTQR5Oi6X4Vl0C2a5kHn393fSeW8z9AZZZ7h5WCgAFmwAoAHdf8Ew/wDgnbpP
        /BPL4HTaMt1DrPjPxFIl54l1iOIqlzKisI4Ic/MLeEM4QNgszyuQpkKj8y/+C1X7H3x+8Y/tt+IvFU/h
        Lxx8QPCN8Yx4ZutD0641iDS7TyYw1t5FurtbMsgctuVRIzbwzFiFAPdf+CL/APwSX+FvxS/Z28EfGbx1
        pOqeIPE15fXV5Z6de3W3S7f7NfzRW8xt1VTISIQ+2ZnQ5B2dMfqkq7f51+b3/BvX+zt8aPgZ4J8dXHxA
        0/xB4X8FaybRvD+ga0rw3Udypm+03K2r4e1RlMSkOqmRk3bQFDP+kVABj259aAPb6mjHt+NFABjnkZow
        v939aKKADOA3uK8r/ab/AG2Phb+x3osd58RfGWleHXuE8y2smLXGoXi5IzFaxBppFyMFlQqD1Ir5+/4L
        C/8ABUlf2D/AFr4Z8J/Zrr4peLLVprBZlEkOhWm5kN9Kh4diyusKMNrOjs25Y2Rvwg8aeM9Z+JPi7UPE
        HiPVNR17XtWk8691C/na4ubp8Yy7sSTgcAdFAAAAAFAH6xfHr/g5o0mxM9r8L/hrqGpNyqan4mu1s4gR
        /ELaAyM6n/aljb1A6V8Y/HX/AILR/tHfHvzoZ/Hs3g/Tpzn7D4Tt/wCylj/3ZwXuh9DORXyzj2/SjHt+
        lAH7Rf8ABt7+0xcfEb4C+OPh7rOpXWoaz4P1r+2LZ7qdpZZbK/Bdvmcl3ZbuK5dmJOPtCDuCfsj9ty/+
        F/hD9nrXPFXxc8IaX4y8H+Fo1urm1u9Ci1hog8iRb44ZFIGCyksMbVBJIAr8Ff8AgmH+2Av7EP7ZPhnx
        jfTPF4Xvt2ieJAOi6fcMm6bHJ/cSpDPwCxWFlHL1+/X7XuoeE5P2QfiVc+MJJZ/BMnhTUX1ZrR082aya
        1k8zyWYFd7IfkJBG4r1oA/NdP20/+CcPh67l1Q/BdpDbqZmjn8Hi4gAUZOIXlaPt021+rngTwlovgbwn
        Z6b4f0Ww8P6Pbxg2+n2dklnDbgjOBEgVUPPIwOa/nc+BGrfsxx/GzwK2q6D8cbawXxDppu5dS8TaNNYx
        Ri6iLNcJHpyO8A/5aKjqxj34IODX9Bfx/wDjl4f/AGbPg54m8d+J7g2+h+F7GS+utpHmTbcBIowSA0kj
        lI0XI3O6jvQB+S//AAcG/tj69pv7ZPhHwn4N8Saz4fuvhvpBubm80jUJrK5ivr/bIY2eJlb5baK2Yc4x
        cMK8f+Bv/Bez9or4OrDb6nrui/EDT4gEEXiLTVM6J6LcW5hkLH+9KZD7Gvlb41/F3WPj38XPFHjjxE6t
        rHirUZ9UuwGLRwmRiREhPPlxrtRc9FRR2r6h/Zt/4J9+Cfhx8BLH45/tNavqnhr4f6oFfwz4S0zKa941
        JXcpHzK0MDpyu1kdlcSNLAgVpAD7m/ZV/wCDivwX8bfFNn4c8VfDnxr4f166xt/4R23k8TxFe7mGCNbv
        Gf4Y4Jfqe/6I6Nqseu6PbX0Md1HBdwrOgubaS1lVWUMN8ciq8bYPKuoZTkEAgiv59Pib/wAFevG1j4cn
        8K/BPw94c/Z/8BDhNO8LWcS6leAADzLm9Kb2mOMl4xG+SQzvksfoz4Ff8EH/ABX+2r8LPDfxG8eftDXO
        vQ+LNPg1W2CWl3rknlTIHXddXdwjBwDhlMIKsCCcjgA/YeKZZ4v3bLJzztIbH5Up+Wvyo1X/AINf9N0e
        Jbjwv8ZtU0rVIvmiluPDiOAw6cw3ETrz3BJHvjFfPXxX+NX7X3/BHP4rafoOu+Pr7XdH1BGuNLOqXUmv
        aHrMEZUMkZucTwGPcgeKNomXeuCVZXYA/dyiviv/AIJrf8FnvB/7dOoxeEdesY/A/wAS/LzFpj3Hm2Wu
        BVJkazlIB3hVLmBxvC5KmVUkdftPI9G/OgD+Zr/goL8Zr74+ftu/FLxNfTNN53iO8sbMN/yys7WVra2U
        DtiGJCcfxFj1Jrx/Nftd+1L/AMG5/gX41fEfWvE/g3x1rngO78QXs2oXdjcWCatYRTSuXkMK+ZDKis7M
        20yOBuwoVQFHzv4y/wCDZf4o6a7Dw98SvAOtKPutqNreaXu+oRbjH5mgD82c0Zr7b8W/8G9/7SnhdmFt
        pvgnxFtzg6V4hAD/AE+0xwHn3Fefa5/wRn/ai8Ooz3Hwf1iaNed9prGl3eR7LFdM36ZoA+Za/Sv/AIJt
        fthaH+2R+ylq/wCx98WfEN1oc2uWK6b4I8Q+YeQkiSW+nyZYbnhkjj8lCQk8Q8g4ZV83481n/gnH+0Bo
        LFbj4L/ExiP+ffQbi6/WJWFYd1+xL8bLFgZPgz8YomUgqw8FaoCCOQQRB1BGcjpQB6p+z/8A8Em/H3xm
        /bQ1r4OeLLGfw7p/g2QS+NdZQf6LY6a27ZLBK42sbpFbyCwzjzHZMQSqPRv+CzH/AAU5g/a88W2fw58A
        6hJL8K/Bs4P2xZ3l/wCEnvEGwXBkclpIIxkRkk+YzNKS2YiuZ8Yf2lP21Pjv+zdYfC7xH4F+LFxocMYt
        tQv4fAmqx6v4gt1+5BfXHlHzUUcHCq0mMytKSxb58tP2GvjheY8n4K/GBge//CF6mo/MwAUAdl/wSu/Z
        l0/9rj9vLwJ4R1q3W68OwTS63rVuwDLc2lohl8lgRgpLP5ETg9Y5X74xJ/wVF/a91T9sn9sfxVrU15JN
        4b8P3k+h+GrXcPJtrKCQp5ijpundDMzdfnVc7Y0A+hP+CMH7MXxo/Z2/b88KeJvEHwm8f6R4Zv7O90XU
        7++0iW2jsYp4d6SMJADt8+GBSccByegNfFf7S/wg1L9n79orxz4I1eOSPUPDOt3Nm29Spmi3l4ZgDztl
        haOVT3WRT3oA4mugn+LHi7UvB2m+F38T+KLjw/ppaPT9GGp3D2Vs0shdhFbhtgZ5HYnauWZu/Fc/n3/W
        voT/AIJafFn4b/An9trwv4w+KC3Emh+H4bi401IdPk1B21UqqWxEKKzMyhpXUgHbIkbDBUGgD9Zf+CG3
        7J/xS/Zi/Z11W4+J2qavDJ4uuYbzSfC99dPcN4bgRWGXDEiGacuGaFeEEUe7EjSInxV/wcGftx+EP2i/
        iP4W+Hvgu8tdct/AE91catq1swkt2vJQkf2aGQcP5ao3mMpK72Vc7o2A9P8A+CvX/BYfwv8AE79meTwB
        8Lda8W6L4i8RX0UWtxX2iXmjXP8AZBjmMqo0yIwEkghRtvLI0i8qxr8mo0WJAq4VVGABxigCxpWq3mg6
        vZ6hp95dadqWnTx3VneWspiuLOeNg8csbr8yOjqrKw5BUEciv6Iv2D/+Cj/hL9oT9kbwP4s8YeKtB0Tx
        XqFk8GsWstxHCftdvNJbTShP4FkeJpFXssiiv51ieOv61+tn/BOz/gi7p/xl/Yv8CeLvFHiDWNB1bxNa
        zaoLOKEFUtprmWS1cZYH57doXwRwXxQB+re7GfcUGjGKAMGgADbT3o60d6MUABFAbHQtRigjJoAN5x95
        vzoZt3978aDyKRjytACjrx+tfDf/AAV0/wCCRtr+3NpkfjTwXJY6P8UtHtxb5nPl2viO2XJW3nYA+XMm
        T5c2CMExuNpR4fuQ80dqAP5Xfi58HvFnwC8dXHhjxv4d1fwr4gtSd9jqMBid1B2742+7LGTwJIyyN2Yi
        vrv/AIIYftefCf8AZE+O3izUPid5ek3XiDT7a00PxFJZPcppWx5TcQsUVniE++AlwNv+jYYgYz+4fxP+
        C3g/45+GjonjTwv4f8WaQzF/ser2EV5CjYI3KsikKwycMMEdjX50/wDBRf8A4JTfAP4OaBDqnhnwH/ZF
        5ebnl8nW9RMWdw+7E1wUX6KoFAHOf8Fvf+CjHwE/aJ/ZWbwV4T1jT/HvjSbUbS70u/s7SRovDwjmRp5v
        PdVXMsKyQbELE+blgAtfko0gRo153SuscY7uzHCqPUk8AdSa/Q79jH9gX4T/ABj+KdnpPiLwvNf2MzAP
        GusX1uT8wH3o5lb9a/Vz4B/sBfBn9lK7huvAPw58N6DqcatGuqeQbrUlVhgr9rmLz7SOo34oA/Kv/gmV
        /wAEK/FXxr8TaX40+NOi3fhbwDautxD4cv4zDqniLByI7iE/NbWxIwyyASyDKhUVhIf2wgijtoEjjjCR
        xqFVVUBVA4AA7AU7ODRuoA//2Q==
</value>
  </data>
  <data name="lblClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACwAAAAnCAYAAAB0Q6rCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAALnSURBVFhH7ZTd
        S1NhHMf3hwRBoZTsQioV2ebefEvNLAyCotvuu6u7bkIsTAQTfIkkm1PnnG7OnE1E1ApDbJqY27S96OZe
        1Dlx6NRvz+aZIS7f9owdYR/4cOCc5zl8OOd3DgcXjGRwvEkGx5u4BO/uAc+++fFA72PO0IN6cKspgBzN
        Ckr6V8NH2lALNvqCuDewijztSvh4nyjWeJmr9KAS/GJ8HbweD0r7Sazun0K1h1lBj5iClQsBCEhoodaL
        sv6jCnvczEp6nCvY6t9Buc4LkdqN0s8e3P2PhVoP6mY2UD3lj02DH1XEzeDe2YNf/vAhS7mMYu1+7Enm
        a9xUlKhdeKz3nj5Ya9kEX7WMXLLxTp87IRZpXScHuzZ38FDnBr/LieJeF0rIpkR6bHDFxBpudiyhQE1G
        oJcdRg0etAfAVzogUjlQpHGyykPBvq1dPBpwIUuxiEK1A7dZ6EHw28k1pMttkKqWwrFslTOzGgS/0x62
        oJs8WZbLSa+fgLjbGY69CHIsHh+EdcPIkpmQ3+NAvsrOag9muH5kFmk1o8hR2pGnWkRel42VHvpLBINB
        PGkZA7d+EhLy8eUqbUQrq4z6H/5qdiKjZgiZZEykXXZIOy2sMWpwhEqdAanVIxAorJB0EhV/Eu6xwSHW
        NgIoaxwGt+EnRGRExGSTuGMhIYo6ThEcoW/KAm6VHhmfTBApLGQzuUH7/PGG1oTWUlBI3nB289TpgyM8
        V43jKhkTXju5SfsChG3m6JLg0PWUSh1S3uhj87Uel17pIBs3nz04hM27DkntIBkTAwTkNeWQwCPKzeA2
        /2Z20ONcwRFk343kCX7BrRYjBG3zEMhNh0z7MMuspEdMwfvs4alsDFeqR5Etnwe/1UQ0hr3+foZZQw8K
        wftM2z3IrNKB22gAj4wDTzaHa02/mKv0oBYcoXZoGpcrBnDj4xxSG6aZs/SgHhxia3sb5U1DkL4bZM7Q
        Iy7B8SQZHG+SwfEF+AvSHXGHdVl/lAAAAABJRU5ErkJggg==
</value>
  </data>
</root>